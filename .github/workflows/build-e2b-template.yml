  name: Build E2B Template

  on:
    workflow_dispatch:
    push:
      paths:
        - 'e2b-unified/e2b.Dockerfile'
        - 'e2b-unified/e2b.toml'
        - '.github/workflows/build-e2b-template.yml'

  jobs:
    build-template:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Install E2B CLI
          run: npm install -g @e2b/cli@latest

        - name: Test E2B Connection
          env:
            E2B_ACCESS_TOKEN: ${{ secrets.E2B_ACCESS_TOKEN }}
          run: |
            echo "Testing E2B connection..."
            # Set longer timeout for Docker operations
            export DOCKER_CLIENT_TIMEOUT=120
            export COMPOSE_HTTP_TIMEOUT=120

            # Test the token is valid
            e2b auth info || echo "Auth info not available, but continuing..."

        - name: Build E2B Template with Retry
          working-directory: ./e2b-unified
          env:
            E2B_ACCESS_TOKEN: ${{ secrets.E2B_ACCESS_TOKEN }}
            DOCKER_CLIENT_TIMEOUT: 120
            COMPOSE_HTTP_TIMEOUT: 120
          run: |
            echo "Building E2B template..."

            # Try up to 3 times with increasing delays
            for i in 1 2 3; do
              echo "Attempt $i of 3..."

              if e2b template build; then
                echo "Build succeeded!"
                break
              else
                if [ $i -lt 3 ]; then
                  echo "Build failed, waiting $(($i * 30)) seconds before retry..."
                  sleep $(($i * 30))
                else
                  echo "Build failed after 3 attempts"
                  exit 1
                fi
              fi
            done

        - name: Extract Template ID
          working-directory: ./e2b-unified
          run: |
            echo "Extracting new template ID..."
            TEMPLATE_ID=$(grep "template_id" e2b.toml | cut -d'"' -f2)
            echo "New Template ID: $TEMPLATE_ID"
            echo "TEMPLATE_ID=$TEMPLATE_ID" >> $GITHUB_ENV

        - name: Create Summary
          run: |
            echo "## âœ… E2B Template Built Successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Template ID:** \`${{ env.TEMPLATE_ID }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
            echo "1. Update your \`.env\` file:" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "   E2B_TEMPLATE_ID=${{ env.TEMPLATE_ID }}" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "2. Test the new template:" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "   node test-direct-sdk.js" >> $GITHUB_STEP_SUMMARY
            echo "   \`\`\`" >> $GITHUB_STEP_SUMMARY
