  name: Build E2B Template

  on:
    workflow_dispatch:
    push:
      paths:
        - 'e2b-unified/e2b.Dockerfile'
        - '.github/workflows/build-e2b-template.yml'

  jobs:
    build-template:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Install E2B CLI
          run: npm install -g @e2b/cli@latest

        - name: Initialize NEW E2B Template
          working-directory: ./e2b-unified
          env:
            E2B_ACCESS_TOKEN: ${{ secrets.E2B_ACCESS_TOKEN }}
          run: |
            echo "Initializing NEW E2B template..."

            # Save our custom Dockerfile
            cp e2b.Dockerfile e2b.Dockerfile.backup

            # Remove existing files so init creates fresh ones
            rm -f e2b.Dockerfile e2b.toml

            # Initialize - this creates NEW e2b.toml AND e2b.Dockerfile
            e2b template init

            # Replace the basic Dockerfile with our custom one
            cp e2b.Dockerfile.backup e2b.Dockerfile

            echo "Template initialized with e2b.toml:"
            cat e2b.toml

            echo "Using our custom Dockerfile with all libraries"

        - name: Build E2B Template
          working-directory: ./e2b-unified
          env:
            E2B_ACCESS_TOKEN: ${{ secrets.E2B_ACCESS_TOKEN }}
          run: |
            echo "Building NEW E2B template..."

            # Build with the Jupyter startup command
            e2b template build -c "/root/.jupyter/start-up.sh"

            echo "Build completed!"

            echo "Final e2b.toml with new template ID:"
            cat e2b.toml

        - name: Extract Template ID
          working-directory: ./e2b-unified
          run: |
            echo "Extracting new template ID..."
            TEMPLATE_ID=$(grep "template_id" e2b.toml | cut -d'"' -f2)
            echo "New Template ID: $TEMPLATE_ID"
            echo "TEMPLATE_ID=$TEMPLATE_ID" >> $GITHUB_ENV
            echo "$TEMPLATE_ID" > template_id.txt

        - name: Commit Updated e2b.toml
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"

            # Restore the backup as the permanent Dockerfile
            cp e2b-unified/e2b.Dockerfile.backup e2b-unified/e2b.Dockerfile

            git add e2b-unified/e2b.toml
            git add e2b-unified/e2b.Dockerfile
            git diff --staged --quiet || git commit -m "Add NEW template with ID: ${{ env.TEMPLATE_ID }}"

        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            branch: ${{ github.ref }}

        - name: Upload Template ID as Artifact
          uses: actions/upload-artifact@v4
          with:
            name: template-id
            path: e2b-unified/template_id.txt

        - name: Create Summary
          run: |
            echo "## âœ… NEW E2B Template Created Successfully!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### ðŸŽ‰ Fresh Template Created!" >> $GITHUB_STEP_SUMMARY
            echo "**New Template ID:** \`${{ env.TEMPLATE_ID }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
            echo "1. Pull changes: \`git pull\`" >> $GITHUB_STEP_SUMMARY
            echo "2. Update .env: \`E2B_TEMPLATE_ID=${{ env.TEMPLATE_ID }}\`" >> $GITHUB_STEP_SUMMARY
            echo "3. Update config: \`const CURRENT_TEMPLATE_ID = '${{ env.TEMPLATE_ID }}'\`" >> $GITHUB_STEP_SUMMARY
            echo "4. Test: \`node test-direct-sdk.js\`" >> $GITHUB_STEP_SUMMARY
